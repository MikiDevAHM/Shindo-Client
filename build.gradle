buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            url = 'https://jitpack.io'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'

version = "Release"
group= "me.miki"
archivesBaseName = "ShindoClient"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9"
    tweakClass = "me.miki.shindo.injection.mixin.ShindoTweaker"
    runDir = "run"
    mappings = "stable_22"
    clientJvmArgs = ["-XX:-DisableExplicitGC"]
    makeObfSourceJar = false
}

repositories {
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }

    maven {
        name "spongepowered"
        url "https://repo.spongepowered.org/maven/"
    }
    jcenter()
    mavenCentral()
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    embed('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    embed(files('libs/lwjgl-soar.jar'))
    embed(files('libs/lwjgl-soar-natives.jar'))
    embed("com.github.jikyo:romaji:0.0.4")
    compile('se.michaelthelin.spotify:spotify-web-api-java:6.5.4') {
        exclude group: 'com.google.code.gson', module: 'gson'
    }

    compile 'com.google.code.gson:gson:2.8.6'
    compileOnly 'com.google.code.gson:gson:2.2.4'
    compile 'com.neovisionaries:nv-i18n:1.29'
}

mixin {
    defaultObfuscationEnv = "notch"
    add sourceSets.main, "mixins.shindo.refmap.json"
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

jar {
    dependsOn configurations.compile
    from {
        configurations.embed.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

jar {
    manifest.attributes(
            "MixinConfigs": 'mixins.shindo.json',
            "TweakClass": 'me.miki.shindo.injection.mixin.ShindoTweaker',
            "TweakOrder": 0,
            "Manifest-Version": 1.0,
            'FMLAT': 'shindo_at.cfg'
    )

    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
